//----------------------------------------------------------------------------------------------------------------------
//	CWorkItem.cpp			Â©2019 Stevo Brock	All rights reserved.
//----------------------------------------------------------------------------------------------------------------------

#include "CWorkItem.h"

#include "PlatformDefinitions.h"

//----------------------------------------------------------------------------------------------------------------------
// MARK: CWorkItemInternals

class CWorkItemInternals {
	public:
		CWorkItemInternals() : mState(kWorkItemStateWaiting) {}
 
		EWorkItemState	mState;
};

//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
// MARK: - CWorkItem

// MARK: Lifecycle methods

//----------------------------------------------------------------------------------------------------------------------
CWorkItem::CWorkItem()
//----------------------------------------------------------------------------------------------------------------------
{
	mInternals = new CWorkItemInternals();
}

//----------------------------------------------------------------------------------------------------------------------
CWorkItem::~CWorkItem()
//----------------------------------------------------------------------------------------------------------------------
{
	Delete(mInternals);
}

// MARK: Instance methods

//----------------------------------------------------------------------------------------------------------------------
EWorkItemState CWorkItem::getState() const
//----------------------------------------------------------------------------------------------------------------------
{
	return mInternals->mState;
}

//----------------------------------------------------------------------------------------------------------------------
void CWorkItem::transitionTo(EWorkItemState state)
//----------------------------------------------------------------------------------------------------------------------
{
	// Update state
	mInternals->mState = state;

	// Check state
	switch (mInternals->mState) {
		case kWorkItemStateCompleted:	completed();	break;
		case kWorkItemStateCancelled:	cancelled();	break;
		default:										break;
	}
}
