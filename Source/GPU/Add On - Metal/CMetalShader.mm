//----------------------------------------------------------------------------------------------------------------------
//	CMetalShader.mm			Â©2020 Stevo Brock	All rights reserved.
//----------------------------------------------------------------------------------------------------------------------

#import "CMetalShader.h"

//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
// MARK: CMetalVertexShader::Internals

class CMetalVertexShader::Internals {
	public:
		Internals(const CString& name) : mName(name) {}

		CString			mName;
		SMatrix4x4_32	mModelMatrix;
};

//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
// MARK: - CMetalVertexShader

// MARK: Lifecycle methods

//----------------------------------------------------------------------------------------------------------------------
CMetalVertexShader::CMetalVertexShader(const CString& name) : CGPUVertexShader()
//----------------------------------------------------------------------------------------------------------------------
{
	mInternals = new Internals(name);
}

//----------------------------------------------------------------------------------------------------------------------
CMetalVertexShader::~CMetalVertexShader()
//----------------------------------------------------------------------------------------------------------------------
{
	Delete(mInternals);
}

// MARK: Instance methods

//----------------------------------------------------------------------------------------------------------------------
const CString& CMetalVertexShader::getName() const
//----------------------------------------------------------------------------------------------------------------------
{
	return mInternals->mName;
}

//----------------------------------------------------------------------------------------------------------------------
void CMetalVertexShader::setModelMatrix(const SMatrix4x4_32& modelMatrix)
//----------------------------------------------------------------------------------------------------------------------
{
	mInternals->mModelMatrix = modelMatrix;
}

//----------------------------------------------------------------------------------------------------------------------
const SMatrix4x4_32& CMetalVertexShader::getModelMatrix() const
//----------------------------------------------------------------------------------------------------------------------
{
	return mInternals->mModelMatrix;
}

//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
// MARK: - CMetalFragmentShader::Internals

class CMetalFragmentShader::Internals {
	public:
		Internals(const CString& name) : mName(name) {}

		CString	mName;
};

//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
// MARK: - CMetalFragmentShader

// MARK: Lifecycle methods

//----------------------------------------------------------------------------------------------------------------------
CMetalFragmentShader::CMetalFragmentShader(const CString& name) : CGPUFragmentShader()
//----------------------------------------------------------------------------------------------------------------------
{
	mInternals = new Internals(name);
}

//----------------------------------------------------------------------------------------------------------------------
CMetalFragmentShader::~CMetalFragmentShader()
//----------------------------------------------------------------------------------------------------------------------
{
	Delete(mInternals);
}

// MARK: Instance methods

//----------------------------------------------------------------------------------------------------------------------
const CString& CMetalFragmentShader::getName() const
//----------------------------------------------------------------------------------------------------------------------
{
	return mInternals->mName;
}
